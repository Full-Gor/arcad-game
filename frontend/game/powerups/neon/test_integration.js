// test_integration.js - Int√©gration des Power-ups N√©on pour test
import { initNeonPowerUps, updateNeonPowerUps, drawNeonPowerUps, spawnNeonPowerUp } from './index.js';
import { canvas } from '../../globals_simple.js';

let neonPowerUpsActive = false;

// Fonction pour activer les power-ups N√©on
export function activateNeonPowerUpsTest() {
    if (neonPowerUpsActive) return;
    
    console.log('üéØ Activation des Power-ups N√©on pour test...');
    
    // Initialiser le syst√®me
    initNeonPowerUps(canvas.width, canvas.height);
    
    // Spawn initial de power-ups
    setTimeout(() => spawnNeonPowerUp('powerup1'), 1000);
    setTimeout(() => spawnNeonPowerUp('powerup2'), 3000);
    setTimeout(() => spawnNeonPowerUp('powerup3'), 5000);
    
    neonPowerUpsActive = true;
    console.log('‚úÖ Power-ups N√©on activ√©s !');
}

// Fonction pour d√©sactiver les power-ups N√©on
export function deactivateNeonPowerUpsTest() {
    neonPowerUpsActive = false;
    console.log('‚ùå Power-ups N√©on d√©sactiv√©s');
}

// Fonction pour mettre √† jour (√† appeler dans la boucle de jeu)
export function updateNeonPowerUpsTest(playerX, playerY, playerWidth, playerHeight) {
    if (!neonPowerUpsActive) return;
    updateNeonPowerUps(playerX, playerY, playerWidth, playerHeight);
}

// Fonction pour dessiner (√† appeler dans la boucle de rendu)
export function drawNeonPowerUpsTest(ctx) {
    if (!neonPowerUpsActive) return;
    drawNeonPowerUps(ctx);
}

// Fonction pour v√©rifier si les power-ups sont actifs
export function areNeonPowerUpsActive() {
    return neonPowerUpsActive;
}

// Fonction pour forcer le spawn d'un power-up sp√©cifique
export function forceSpawnNeonPowerUp(type) {
    if (!neonPowerUpsActive) {
        console.log('‚ö†Ô∏è Power-ups N√©on non activ√©s. Appelez activateNeonPowerUpsTest() d\'abord.');
        return;
    }
    
    spawnNeonPowerUp(type);
    console.log(`üéØ Power-up N√©on forc√©: ${type}`);
}
