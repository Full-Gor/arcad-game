// score_simple.js - Gestion du comptage des ennemis abattus de fa√ßon modulaire

// Variables pour le comptage (copi√©es de game.html)
let enemiesKilled = 0;
let killsWithoutDeath = 0;
let simultaneousKills = 0;
let lastKillTime = 0;
let enemiesDestroyedWithoutHit = 0;

// NOUVEAU: Compteur global pour le boss
let totalEnemiesKilledGlobal = 0;
const BOSS_SPAWN_GLOBAL_THRESHOLD = 100;

// Fonction principale de gestion des kills (copi√©e de game.html ligne 3326-3380)
export function handleKill(playerNumber = 1) {
    lastKillTime = Date.now();
    simultaneousKills++;
    enemiesKilled++;
    killsWithoutDeath++;
    
    // NOUVEAU: Incr√©menter le compteur global
    totalEnemiesKilledGlobal++;
    console.log(`üìä Total ennemis tu√©s: ${totalEnemiesKilledGlobal}/${BOSS_SPAWN_GLOBAL_THRESHOLD}`);
    
    // Mettre √† jour l'affichage (copi√©e de game.html ligne 3331)
    updateEnemiesKilledDisplay();
    
    // Incr√©menter le compteur d'ennemis d√©truits sans √™tre touch√©
    enemiesDestroyedWithoutHit++;
    
    // Si 10 ennemis ont √©t√© d√©truits sans √™tre touch√©, cr√©er une √©toile
    if (enemiesDestroyedWithoutHit >= 10) {
        // createStar(); // √Ä impl√©menter plus tard si n√©cessaire
        console.log('10 ennemis d√©truits sans √™tre touch√© ! √âtoile √† cr√©er.');
        enemiesDestroyedWithoutHit = 0; // R√©initialiser
    }
    
    // Logique de progression selon le stage (copi√©e de game.html ligne 3342-3380)
    // Stage 1 uniquement pour le moment
    if (enemiesKilled === 200) {
        console.log('200 ennemis tu√©s ! Boss √† cr√©er.');
        // createBoss(); // √Ä impl√©menter plus tard
    }
    else if (enemiesKilled % 30 === 0) {
        console.log(`${enemiesKilled} ennemis tu√©s ! Mini-boss √† cr√©er.`);
        // createMiniBoss(); // √Ä impl√©menter plus tard
    }
    
    console.log(`Ennemi abattu ! Total: ${enemiesKilled}, Sans mort: ${killsWithoutDeath}, Sans touche: ${enemiesDestroyedWithoutHit}`);
}

// Fonction pour mettre √† jour l'affichage du compteur (copi√©e de game.html ligne 3331)
function updateEnemiesKilledDisplay() {
    const enemiesKilledElement = document.getElementById("enemiesKilledCount");
    if (enemiesKilledElement) {
        enemiesKilledElement.innerText = enemiesKilled;
    } else {
        console.warn('√âl√©ment enemiesKilledCount non trouv√© dans le DOM');
    }
}

// Fonction pour obtenir le nombre d'ennemis tu√©s
export function getEnemiesKilled() {
    return enemiesKilled;
}

// Fonction pour obtenir les kills sans mort
export function getKillsWithoutDeath() {
    return killsWithoutDeath;
}

// Fonction pour obtenir les kills simultan√©s
export function getSimultaneousKills() {
    return simultaneousKills;
}

// Fonction pour obtenir le nombre d'ennemis d√©truits sans √™tre touch√©
export function getEnemiesDestroyedWithoutHit() {
    return enemiesDestroyedWithoutHit;
}

// Fonction pour r√©initialiser les compteurs (utile pour restart)
export function resetScoreCounters() {
    enemiesKilled = 0;
    killsWithoutDeath = 0;
    simultaneousKills = 0;
    lastKillTime = 0;
    enemiesDestroyedWithoutHit = 0;
    
    updateEnemiesKilledDisplay();
    console.log('Compteurs de score r√©initialis√©s');
}

// NOUVEAU: Fonction pour v√©rifier si le boss doit appara√Ætre
export function shouldSpawnBossGlobal() {
    if (totalEnemiesKilledGlobal >= BOSS_SPAWN_GLOBAL_THRESHOLD) {
        console.log(`üî• ${totalEnemiesKilledGlobal} ennemis tu√©s ! Boss doit appara√Ætre !`);
        return true;
    }
    return false;
}

// NOUVEAU: Fonction pour obtenir le compteur global
export function getTotalEnemiesKilledGlobal() {
    return totalEnemiesKilledGlobal;
}

// NOUVEAU: Fonction pour r√©initialiser le compteur global
export function resetGlobalKillCounter() {
    totalEnemiesKilledGlobal = 0;
    console.log('Compteur global d\'ennemis r√©initialis√©');
}

// Fonction pour ajouter des points bonus (copi√©e des fonctions de boss)
export function addBonusKills(bonusAmount) {
    enemiesKilled += bonusAmount;
    updateEnemiesKilledDisplay();
    console.log(`Bonus de ${bonusAmount} ennemis ajout√© ! Total: ${enemiesKilled}`);
}

// Fonction pour initialiser l'affichage du score
export function initializeScore() {
    updateEnemiesKilledDisplay();
    console.log('Module score initialis√©');
}
